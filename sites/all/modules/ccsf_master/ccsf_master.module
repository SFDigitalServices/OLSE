<?php

/**
 * @file
 * Control where users are directed to, once they login
 */

// Page constants
define('ccsf_master_REDIRECT_NOTLISTED', 0);
define('ccsf_master_REDIRECT_LISTED', 1);
define('ccsf_master_REDIRECT_PHP', 2);

// Destination constants
define('ccsf_master_STATIC', 0);
define('ccsf_master_SNIPPET', 1);

/**
 * Implement hook_help().
 */
function ccsf_master_help($path, $arg) {
  switch ($path) {
    case 'admin/help#ccsf_master':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Login Destination module allows you to customize the destination that the user is redirected to after logging in, registering to the site, using a one-time login link or logging out. The destination can be an internal page or an external URL. You may specify certain conditions like pages or user roles and make the destination depend upon them. You may also use a PHP snippets to provide custom conditions and destinations. Note that PHP Filter module has to be enabled and you have to be granted the "Use PHP for settings" permissions to be able to enter PHP code.') . '</p>';
      return $output;
    case 'admin/config/people/login-destination':
      return '<p>' . t('Login destination rules are evaluated each time a user logs in, registers to the site, uses a one-time login link or logs out. Each rule consists of the destination, path conditions and user roles conditions. First matching rule gets executed.') . '</p>';
  }
}

/**
 * Implements hook_menu().
 */
function ccsf_master_menu_alter(&$items) {
  $items['ajax/%'] = array(
        'page callback' => 'parseAjaxRequest', // Render HTML
        'page arguments' => array(1),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

  return $items;
}

/**
 * @param $params in nodeid - targetid format
 * @param $type, type of request to handle
 */
function parseAjaxRequest($params){
    $pieces = explode("-", $params);
    $nid = $pieces[0];
    $uid = $pieces[1];
    $type = $pieces[2];

    switch ($type) {
        case 'users': ajaxLoadUsers($nid, $uid);
            break;
        default: break;

    }
}

/**
 * Get a list of registered users
 * @param $nid - current node id
 * @param $uid - current user id
 * @return list of users in <option /> form
 */
function ajaxLoadUsers($nid, $uid){
    global $user;
    $select = "SELECT U.name as 'name', U.uid as 'uid' FROM users U join users_roles UR ON U.uid = UR.uid JOIN role R ON R.rid = UR.rid
    WHERE UR.rid in (4,5);";

    $result = db_query($select)->fetchAll();

    $html = "<option value=''></option>";
    $selected = "";
    foreach ($result as $record) {
        if($uid == $record->uid)
            $selected = "selected";
        else
            $selected = "";
        $html .= "<option value='$record->uid' " . $selected . "> $record->name </option>";
    }
    $html .= "</select>";
    print $html;
 }
